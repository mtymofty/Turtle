import { ErrorType, WarningType } from "./ErrorType";

export class ErrorUtils {
    static error_mess: Record<ErrorType, string> = {
        [ErrorType.STRING_EOL_ERR]: `ERROR - UNEXPECTED EOL WHILE PARSING STRING`,
        [ErrorType.STRING_EOF_ERR]: `ERROR - UNEXPECTED EOF WHILE PARSING STRING`,
        [ErrorType.STRING_LEN_ERR]: "ERROR - EXCEEDING LENGTH OF A STRING!",
        [ErrorType.IDENT_LEN_ERR]: "ERROR - EXCEEDING LENGTH OF AN IDENTIFIER!",
        [ErrorType.NUM_PREC_ZERO_ERR]: "ERROR - PRECEDING ZERO IN A NUMERIC CONSTANT!",
        [ErrorType.DOUBLE_EXC_VAL_ERR]: "ERROR - EXCEEDING VALUE OF A NUMERIC CONSTANT (DOUBLE)!",
        [ErrorType.INTEGER_EXC_VAL_ERR]: "ERROR - EXCEEDING VALUE OF A NUMERIC CONSTANT (INT)!",
        [ErrorType.OPERATOR_PARSE_ERR]: `ERROR WHILE PARSING "$" OPERATOR\nEXPECTED "$" GOT "$"`,
        [ErrorType.UNREC_TOKEN_ERR]: `ERROR - UNRECOGNIZED TOKEN: "$"`,
        [ErrorType.NEWLINE_ERR]: `CRITICAL ERROR - ENCOUNTERED TWO DIFFERENT NEWLINE SIGNS - CORRUPTED FILE`,
        [ErrorType.PATH_ERR]: `CRITICAL ERROR - NO SUCH FILE OR DIRECTORY`,

        [ErrorType.INVALID_TOKEN_ERR]: `CRITICAL ERROR - EXPECTED FUNCTION DEFINITION, GOT $`,
        [ErrorType.PARAMS_LEFT_BRACE_ERR]: `ERROR - EXPECTED LEFT BRACE OF FUNCTION PARAMETERS LIST "("`,
        [ErrorType.PARAMS_RIGHT_BRACE_ERR]: `ERROR - EXPECTED RIGHT BRACE OF FUNCTION PARAMETERS LIST ")"`,
        [ErrorType.FUN_BLOCK_ERR]: `CRITICAL ERROR - EXPECTED FUNCTION BLOCK`,
        [ErrorType.FUN_IDENTIFIER_ERR]: `CRITICAL ERROR - EXPECTED FUNCTION IDENTIFIER`,
        [ErrorType.PARAMS_COMMA_ERR]: `ERROR - EXPECTED FUNCTION PARAMETER NAME`,
        [ErrorType.PARAM_NAME_ERR]: `ERROR - DUPLICATE FUNCTION PARAMETER NAME "$"`,
        [ErrorType.FUN_NAME_ERR]: `ERROR - DUPLICATE FUNCTION NAME "$"`,
        [ErrorType.BLOCK_END_ERR]: `ERROR - EXPECTED RIGHT BRACE OF FUNCTION BLOCK "}"`,
        [ErrorType.TERMINATOR_ERR]: `ERROR - EXPECTED STATEMENT TERMINATOR ";"`,
        [ErrorType.IF_LEFT_BRACE_ERR]: `ERROR - EXPECTED LEFT BRACE OF IF/UNLESS CONDITION "("`,
        [ErrorType.IF_COND_ERR]: `CRITICAL ERROR - EXPECTED IF/UNLESS STATEMENT CONDITION`,
        [ErrorType.IF_RIGHT_BRACE_ERR]: `ERROR - EXPECTED RIGHT BRACE OF IF/UNLESS CONDITION ")"`,
        [ErrorType.IF_BLOCK_ERR]: `CRITICAL ERROR - EXPECTED IF/UNLESS BLOCK`,
        [ErrorType.ELSE_BLOCK_ERR]: `CRITICAL ERROR - EXPECTED ELSE BLOCK`,
        [ErrorType.WHILE_LEFT_BRACE_ERR]: `ERROR - EXPECTED LEFT BRACE OF WHILE CONDITION "("`,
        [ErrorType.WHILE_COND_ERR]: `CRITICAL ERROR - EXPECTED WHILE STATEMENT CONDITION`,
        [ErrorType.WHILE_RIGHT_BRACE_ERR]: `ERROR - EXPECTED RIGHT BRACE OF WHILE CONDITION ")"`,
        [ErrorType.WHILE_BLOCK_ERR]: `CRITICAL ERROR - EXPECTED WHILE BLOCK`,
        [ErrorType.IDENT_MEM_ACCESS_ERR]: `CRITICAL ERROR - STANDALONE IDENTIFIER OR MEMBER ACCESS`,
        [ErrorType.ASSIGN_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING ASSIGNMENT`,
        [ErrorType.FUN_METH_CALL_ERR]: `CRITICAL ERROR - ASSIGN OPERATOR CANNOT BE USED ON A FUNCALL`,
        [ErrorType.ARGS_COMMA_ERR]: `ERROR - EXPECTED FUNCTION ARGUMENT`,
        [ErrorType.ARGS_RIGHT_BRACE_ERR]: `ERROR - EXPECTED RIGHT BRACE OF FUNCTION ARGUMENTS LIST ")"`,
        [ErrorType.OBJ_ACC_ERR]: `ERROR - EXPECTED MEMBER NAME WHILE PARSING OBJECT MEMBER ACCESS`,
        [ErrorType.PARENTH_RIGHT_BRACE_ERR]: `ERROR - EXPECTED RIGHT BRACE WHILE PARSING PARENTH EXPRESSION ")"`,
        [ErrorType.OR_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING DISJUNCTION`,
        [ErrorType.ADD_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING ADDITION`,
        [ErrorType.AND_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING CONJUNCTION`,
        [ErrorType.DIV_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING DIVISION`,
        [ErrorType.MULT_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING MULTIPLICATION`,
        [ErrorType.COMP_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING COMPARISON`,
        [ErrorType.SUB_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING SUBTRACTION`,
        [ErrorType.EXP_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING EXPONENTIATION`,
        [ErrorType.NEG_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING NEGATION`,
        [ErrorType.INTDIV_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING INTEGER DIVISION`,
        [ErrorType.MODULO_EXPR_ERR]: `CRITICAL ERROR - EXPECTED EXPRESSION WHILE PARSING MODULO OPERATION`,
        [ErrorType.COMP_NUM_ERR]: `CRITICAL ERROR - ENCOUNTERED TOO MANY COMPARISONS IN SINGLE STATEMENT`,

        [ErrorType.MAIN_FUN_ERR]: `CRITICAL ERROR - MISSING MAIN FUNCTION DEFINITION`,
        [ErrorType.MAIN_PARAM_ERR]: `CRITICAL ERROR - MAIN FUNCTION CANNOT HAVE PARAMETERS`,
        [ErrorType.FUN_UNDEF_ERR]: `CRITICAL ERROR - FUNCTION "$" IS NOT DEFINED`,
        [ErrorType.ARGS_NUM_ERR]: `CRITICAL ERROR - FUNCTION "$" TAKES EXACTLY $ ARGUMENTS, $ GIVEN`,
        [ErrorType.VAR_UNDEF_ERR]: `CRITICAL ERROR - VARIABLE "$" IS NOT DEFINED`,
        [ErrorType.ADD_TYPE_ERR]: `CRITICAL ERROR - ADDITION IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.SUBTR_TYPE_ERR]: `CRITICAL ERROR - SUBTRACTION IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.DIV_TYPE_ERR]: `CRITICAL ERROR - DIVISION IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.INTDIV_TYPE_ERR]: `CRITICAL ERROR - INTEGER DIVISION IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.MOD_TYPE_ERR]: `CRITICAL ERROR - MODULO IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.MULT_TYPE_ERR]: `CRITICAL ERROR - MULTIPLICATION IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.EXP_TYPE_ERR]: `CRITICAL ERROR - EXPONENTIATION IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.AND_TYPE_ERR]: `CRITICAL ERROR - CONJUCTION IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.OR_TYPE_ERR]: `CRITICAL ERROR - DISJUNCTION IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.NEG_TYPE_ERR]: `CRITICAL ERROR - NEGATION IS NOT SUPPORTED FOR TYPE $`,
        [ErrorType.LOG_NEG_TYPE_ERR]: `CRITICAL ERROR - LOGICAL NEGATION IS NOT SUPPORTED FOR TYPE $`,
        [ErrorType.EQ_TYPE_ERR]: `CRITICAL ERROR - "EQUAL" COMPARISON IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.NEQ_TYPE_ERR]: `CRITICAL ERROR - "NOT EQUAL" COMPARISON IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.GRT_TYPE_ERR]: `CRITICAL ERROR - "GREATER" COMPARISON IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.GRTEQ_TYPE_ERR]: `CRITICAL ERROR - "GREATER OR EQUAL" COMPARISON IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.LESS_TYPE_ERR]: `CRITICAL ERROR - "LESSER" COMPARISON IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.LESSEQ_TYPE_ERR]: `CRITICAL ERROR - "LESSER OR EQUAL" COMPARISON IS NOT SUPPORTED FOR TYPES $ AND $`,
        [ErrorType.ZERO_DIV_ERR]: `CRITICAL ERROR - DIVISION BY ZERO!`,
        [ErrorType.OBJ_CONSTR_ERR]: `CRITICAL ERROR - EXPECTED TYPES [$] IN OBJECT CONSTRUCTOR. GOT ARGUMENTS OF TYPES [$]`
    }

    static warning_mess: Record<WarningType, string> = {
        [WarningType.STRING_ESC_WARN]: "WARNING - TRIED TO ESCAPE UNESCAPABLE CHARACTER",
        [WarningType.COLOR_OPACITY_WARN]: "WARNING - COLOR OPACITY EXCEEDED VALUE LIMIT (0-100). SETTING TO $",
        [WarningType.COLOR_COL_WARN]: "WARNING - COLOR $ COMPONENT EXCEEDED VALUE LIMIT (0-255). SETTING TO $",
    }
}
